


=========================================
Puppet Class Notes
=========================================
**Port 8140 should be listening on Puppet Master

What is Configuration Management?
  Not to have Configuration Drift
  It makes you proactive rather than reactive
  Prevents "Out-of-band" changes
  self healing
  Idempotence / Idempotent

References:
https://www.digitalocean.com/community/tutorials/an-introduction-to-configuration-management
https://www.netapp.com/us/info/what-is-configuration-management.aspx
https://puppet.com/solutions/configuration-management
=========================================
Keywords:
DSC => Desired State Configuration

DSL => Domain Specific Language (Declarative**)
Puppet DSL
Chef DSL
Ansible DSL

** Declarative (What do you want to do/Achieve, you don't tell how to do it.) vs Imperative (Java, C, Python)

Providers
NodeObject (file which contains all the "facts" about a specific node)
=========================================
Puppet Pull/Master Slave / Agent Based
Chef Pull/Server Node / Agent based
Ansible - Push / Agentless
Puppet  => Node /puppet Agent/Puppet-Slave/
Chef    => Node /Chef client / Chef node
=========================================
Traditional lanaguages      Puppet                        Chef
Packages                            Modules                       Cookbooks
Codefiles                            Manifest (.pp)                Recipes
Function                              Resources                     Resources

					   facter                             OHAI
                                            facts (node)                  Attributes (node)
                                             forge.puppet.com              chef supermarket
                                        (for community Modules)       (for community cookbooks)
=========================================
Puppet works on SSL certificate based authentication
Chef works on pem file based authentication
Ansible is ssh
=========================================
Puppet => Master/Slave
Chef => Server/Node
Ansible=> Tower/node
Salt => Master/ Minion
=========================================
Installation Steps: Puppet Master
=========================================
curl -O https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb
sudo dpkg -i puppetlabs-release-pc1-xenial.deb
sudo apt-get update
sudo apt-get install puppetserver
sudo vi /etc/default/puppetserver
ufw allow 8140
sudo systemctl start puppetserver
sudo systemctl status puppetserver
sudo systemctl enable puppetserver
=========================================
Installation Steps: Puppet Slave
=========================================
wget https://apt.puppetlabs.com/puppetlabs-release-pc1-xenial.deb
sudo dpkg -i puppetlabs-release-pc1-xenial.deb
sudo apt-get install puppet-agent
sudo systemctl start puppet
sudo systemctl enable puppet
=========================================
Installation Steps: Signing Certificates
=========================================
Following command will list all certificates to be signed on Master:
sudo /opt/puppetlabs/bin/puppet cert list
Following command will sign all certificates on Master:
sudo /opt/puppetlabs/bin/puppet cert sign --all
########################################
# Your first puppet manifest file
########################################
node default {
  file { '/tmp/info.txt':
    ensure  => 'present',
    content => "This file has been created in puppet server\n"
  }
    file { '/home/vagrant/mydir':
        ensure  => 'directory',
  }
  package { 'screen':
    ensure => 'installed',
    }
    service { 'puppet':
        ensure => 'running',
        enable  => true,
    }
    user { 'sk12k':
        ensure   => 'present',
        password => '123456'
    }
}
########################################
#Meta Parameters
########################################
package { 'openssh-server':
  ensure => present,
  before => File['etc/ssh/sshd_config']
}
file { '/etc/ssh/sshd_config' :
  ensure  => 'file',
  mode    => '0644',
  source  => 'puppet:///modules/sshd/sshd_config',
  require => Package['openssh-server']
  notify  => Service['sshd']
}
service { 'sshd':
  ensure => 'running',
  enable => true,
  subscribe => File['/etc/ssh/sshd_config']
}
## source => puppet master =>/etc/puppet/modules/sshd/files/sshd_config
########################################
#Chained Arrows
########################################
package { 'openssh-server':
  ensure => present,
} ->
file { '/etc/ssh/sshd_config' :
  ensure  => 'file',
  mode    => '0644',
  source  => 'puppet:///modules/sshd/sshd_config',
} ~>
service { 'sshd':
  ensure => 'running',
  enable => true,
}
########################################
site.pp vs init.pp
########################################
## site.pp => used for site wide configuration settings
##Location of site.pp
/etc/puppet/manifests/site.pp
## init.pp => used for module specific configuration settings
##Location of init.pp
/etc/puppet/modules/sk12k-ntp/manifests/init.pp
########################################
puppet module commands
########################################
puppet module install modulename
puppet module list
puppet module upgrage modulename
puppet module uninstall modulename
########################################
# Further references
########################################
https://www.edureka.co/blog/what-is-puppet/
https://www.edureka.co/blog/tag/puppet/
https://www.edureka.co/blog/chef-vs-puppet-vs-ansible-vs-saltstack/
https://docs.puppet.com/
https://www.puppetcookbook.com/
http://fullstack-puppet-docs.readthedocs.io/en/latest/puppet_manifests.html
http://www.bogotobogo.com/DevOps/Puppet/puppet_basics_of_code_terminology.php

# Virtual Private Cloud (VPC)
================================
- Enables one to launch AWS resources into a defined virtual Network and give complete control over the Network
- It is logically isolated from other virtual Network in the AWS Cloud
- AWS creates a Default VPC for your account
- Non-Default VPC
 a. Does not receive public IP address by default unless specified
 b. Instance receive static Private IP address from the address range of your VPC
 c. DNS names disabled
 d. The Instance cannot access the Internet
 e. The VPC may have an Internet gateway, depending on how it was created

 ** A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between
    them using private IPv4 addresses or IPv6 addresses. Instances in either VPC can communicate with each other as
    if they are within the same network. You can create a VPC peering connection between your own VPCs, or with a VPC
    in another AWS account. The VPCs can be in different regions (also known as an inter-region VPC peering connection).
    [https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html]

 ** Full Mesh VPC peering
    [https://docs.aws.amazon.com/vpc/latest/peering/peering-configurations-full-access.html#many-vpcs-full-access]

 ** Unsupported VPC Peering
    - Overlapping CIDR Blocks
    - Transitive Peering
    - Edge to Edge Routing Through a Gateway or Private Connection
    [https://docs.aws.amazon.com/vpc/latest/peering/invalid-peering-configurations.html]

# Security Group with VPC
===============================
- Virtual Firewall
- Act at Instance level, not the subnet level
- Up to 500 Security groups per VPC
- Can specify all rules, but not deny rules
- Stateful

# VPC Components
=================================
- IP addressing
- Public and Private Subnets
- Route Table
- Access Control List (ACLs)
- NAT Instance and gateway
- VPC Peering
- Internet and Virtual gateway

# NAT Gateway
===============================
- You can use a network address translation (NAT) gateway to enable instances in a private subnet to connect to the
  internet or other AWS services, but prevent the internet from initiating a connection with those instances
  [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html]

- Creating NAT Gateway:
** To create a NAT gateway, you must specify a subnet and an Elastic IP address. Ensure that the Elastic IP address is
   currently not associated with an instance or a network interface.
** After you've created your NAT gateway, you must update your route tables for your private subnets to point internet traffic
   to the NAT gateway.

** A NAT gateway cannot send traffic over VPC endpoints, VPN connections, AWS Direct Connect, or VPC peering connections
   [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-%20gateway-basics]

- Controlling the Use of NAT Gateways:
** By default, IAM users do not have permission to work with NAT gateways. You can create an IAM user policy that grants users
   permissions to create, describe, and delete NAT gateways. We currently do not support resource-level permissions for any of
   the ec2:*NatGateway* API operations

- Comparison of NAT Instances and NAT Gateways
  [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-comparison.html]

# Route tables
===================================
- Every route table contains a local route for communication within the VPC over IPv4. If your VPC has more than one IPv4 CIDR block,
  your route tables contain a local route for each IPv4 CIDR block. If you've associated an IPv6 CIDR block with your VPC, your route
  tables contain a local route for the IPv6 CIDR block. You cannot modify or delete these routes.
  [https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html#RouteTa%20bles]


# VPC endpoints
====================================
- A VPC endpoint enables you to privately connect your VPC to supported AWS services and VPC endpoint services powered by
  PrivateLink without requiring an internet gateway, NAT device, VPN connection, or AWS Direct Connect connection. Instances
  in your VPC do not require public IP addresses to communicate with resources in the service. Traffic between your VPC
  and the other service does not leave the Amazon network.
  [https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html]

** endpoints are supported in same region only

# AWS Direct Connect
=================================
